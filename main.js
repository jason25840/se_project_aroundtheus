!function(){"use strict";var e=class{constructor(e,t,s,r,n){this._name=e.name,this._link=e.link,this._id=e._id,this._isLiked=e.isLiked,this._handleDeleteClick=r,this._handleLikeClick=n,this._cardSelector=t,this._openPreviewModal=s}_getTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}handleLikeButton(){this._cardLikeButton.classList.toggle("card__like-button_active")}_toggleLike(){this._isLiked?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}handleTrashButton(){this._cardElement.remove(),this._cardElement=null}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._cardElement.querySelector(".card__trash-button").addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._openPreviewModal({name:this._name,link:this._link})}))}getCardElement(){return this._cardElement=this._getTemplate(),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardElement.querySelector(".card__image").src=this._link,this._cardElement.querySelector(".card__title").textContent=this._name,this._cardElement.querySelector(".card__image").alt=this.name,this._toggleLike(),this._setEventListeners(),this._cardElement}},t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass,this._inputErrorClass)}_toggleButtonState(){if(this._hasInvalidInput(this._inputElement))return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(e){return![...e].every((e=>e.validity.valid))}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_setEventListeners(){this._inputElement=this._formElement.querySelectorAll(this._inputSelector),this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElement.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._formElement.reset(),this._toggleButtonState()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class s{constructor(e){this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleMouseClickModalClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handleMouseClickModalClose)}_handleEscClose=e=>{if("Escape"===e.key){const e=document.querySelector(".modal_opened");this.close(e)}};_handleMouseClickModalClose(e){if(e.target.classList.contains("modal")){const e=document.querySelector(".modal_opened");this.close(e)}}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}class r extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._submitBtn=this._popupElement.querySelector(".modal__button"),this._submitBtnText=this._submitBtn.textContent}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitBtn.textContent=e?t:this._submitBtnText}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}class n{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._element=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._element.prepend(e)}}const i=document.querySelector("#profile-edit-button"),o=(document.querySelector("#profile-edit-modal").querySelector(".modal__close"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),l=document.querySelector("#profile-description-input"),a=(document.querySelector(".profile__avatar-button"),document.querySelector("#edit-avatar-modal").querySelector(".modal__close"),document.querySelector("#avatar-link-input"),document.querySelector(".profile__avatar")),d=(document.querySelector("#add-card-modal").querySelector(".modal__close"),document.querySelector("#image__add-button")),c=document.forms["profile-form"],u=document.forms["card-form"],h=document.querySelector("#modal__delete-form"),_=(document.querySelector("#profile-title-input"),document.querySelector("#profile-description-input"),document.querySelector("#avatar-form")),m=(document.querySelector(".cards__gallery"),document.querySelector("#card-template").content.firstElementChild,document.querySelector("#image-title-input"),document.querySelector("#image-url-input"),h.querySelector(".modal-delete-button"),document.querySelector("#modal__preview-card")),p=(document.querySelector(".modal__preview-image"),m.querySelector("#preview-title"),m.querySelector(".modal__close"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}),v="#card-template";function E(e){C.open(e)}const f=new class{constructor(e){let{baseUrl:t,headers:s}=e;this.server=t,this.headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this.server}/users/me`,{headers:this.headers}).then(this._checkResponse)}getInitialCards(){return fetch(`${this.server}/cards`,{headers:this.headers}).then(this._checkResponse)}renderCards(){Promise.all(this.getUserInfo(),this.getInitialCards())}userProfileInfo(e,t){return fetch(`${this.server}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}updateAvatar(e){return fetch(`${this.server}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}addNewCard(e,t){return fetch(`${this.server}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this.server}/cards/${e}`,{method:"DELETE",headers:this.headers}).then(this._checkResponse)}likeCard(e){return fetch(`${this.server}/cards/${e}/likes`,{method:"PUT",headers:this.headers}).then(this._checkResponse).then((()=>console.log("Card has been liked")))}dislikeCard(e){return fetch(`${this.server}/cards/${e}/likes`,{method:"DELETE",headers:this.headers}).then(this._checkResponse).then((()=>console.log("Card is not yet liked")))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"d5d1d874-a161-48bd-b3b4-ae8e38400ed9","Content-Type":"application/json"}});let S;function y(t){const s=new e(t,v,E,T,x).getCardElement();S.addItem(s)}f.getUserInfo().then((e=>{k.setUserInfo(e),k.setUserAvatar(e)})).catch((e=>{console.log(e)})),f.getInitialCards().then((e=>{S=new n({items:e,renderer:y},".cards__gallery"),S.renderItems()})).catch((e=>{console.log(e)}));const k=new class{constructor(e,t,s){this._nameElement=document.querySelector(e),this._descriptionElement=document.querySelector(t),this._userAvatar=s}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent,avatar:this._userAvatar.src}}setUserInfo(e){let{name:t,about:s}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=s}setUserAvatar(e){this._userAvatar.src=e.avatar}}(".profile__title",".profile__description",a),L=new r("#profile-edit-modal",(function(e){L.renderLoading(!0),f.userProfileInfo(e.name,e.description).then((e=>{console.log(e),k.setUserInfo(e),L.close()})).catch((e=>{console.log(e)})).finally((()=>{L.renderLoading(!1)}))})),g=new r("#add-card-modal",(function(e){g.renderLoading(!0),f.addNewCard(e.name,e.link).then((e=>{y(e),g.close(),w.resetValidation()})).catch((e=>{console.log(e)})).finally((()=>{g.renderLoading(!1)}))})),C=new class extends s{constructor(e){super(e),this._imageElement=document.querySelector(".modal__preview-image"),this._imageTitle=document.querySelector("#preview-title")}open(e){let{name:t,link:s}=e;this._imageElement.src=s,this._imageElement.alt=t,this._imageTitle.textContent=t,super.open()}}("#modal__preview-card"),b=new class extends s{constructor(e){super(e),this._popUpForm=this._popupElement.querySelector(".modal__form")}handleDelete(e){this._handleDeleteSubmit=e}setEventListeners(){super.setEventListeners(),this._popUpForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleDeleteSubmit()}))}}("#delete-card-modal"),q=new r("#edit-avatar-modal",(function(e){q.renderLoading(!0),f.updateAvatar(e.link).then((e=>{k.setUserAvatar(e)})).then((()=>{console.log("Avatar has been updated"),q.close()})).catch((e=>{console.error(e)})).finally((()=>{q.renderLoading(!1)}))})),B=new t(p,c),w=new t(p,u),I=new t(p,h),U=new t(p,_);function x(e){console.log(e),e.isLiked&&f.dislikeCard(e._id).then((()=>{e.handleLikeButton(),e.isLiked=!1})).catch((e=>{console.error(e)})),e.isLiked||f.likeCard(e._id).then((()=>{e.handleLikeButton(),e.isLiked=!0})).catch((e=>{console.error(e)}))}function T(e){console.log(e),b.open(),b.handleDelete((()=>{f.deleteCard(e._id).then((()=>{b.close(),e.handleTrashButton()})).catch((e=>{console.log(e)}))}))}i.addEventListener("click",(()=>{L.open();const e=k.getUserInfo();o.value=e.name,l.value=e.description})),d.addEventListener("click",(()=>{g.open()})),a.addEventListener("click",(()=>{q.open()})),L.setEventListeners(),g.setEventListeners(),C.setEventListeners(),b.setEventListeners(),q.setEventListeners(),B.enableValidation(),w.enableValidation(),I.enableValidation(),U.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,